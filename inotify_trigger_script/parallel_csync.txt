
## Running csync2 -u for each pair in parallel.

When using SQLite database, deletes from the `dirty` table cause a lock on the database which will stall any other processes accessing the same database. As a test, if the deletes are disabled then multiple processes can run together.

The easy solution is to enable write-ahead logging in SQLite - this queues up the database transactions and allows consistent access until commit. Unfortunately, it is not possible to use WAL because of the non-standard ways that the csync codebase uses transactions.

Various workarounds and hacks could be employed but it doesn't get around the fact that as awesome as SQLite is, it isn't really designed for writes from different processes. The best way forward is changing to a database that accommodates this at its heart.


## Parallelising the csync codebase

I wanted to add multithreading to update operations directly in the csync codebase but the liberal use of global variables especially for database access makes this impossible without careful rewriting.

The best alternative (and not a bad one) is to run several background processes of the csync command for each peer. I've done this and it works well. I thought there would be an overhead for starting up the parallel csync  processes but there is none.


### Csync Build

Configure and Make
cd /opt/csync2
./autogen.sh clean
./autogen.sh
./configure --prefix=/usr --localstatedir=/var --sysconfdir=/etc/csync2/ --enable-sqlite3 --enable-systemd --disable-gnutls

make clean
make
make install


#Check libraries it is built with are showing up correctly and install missing ones:

ldd /usr/sbin/csync2


#Csyncs command format for manual run:
#Sender:
csync2  -N 10.10.10.7 -xv

#Receiver:
csync2 -N 10.10.10.5 -iiv


#Csync2 will issue Permission error (on very verbose mode) if config and/or key file is not matching on all nodes. Generate one key and share it with other nodes (otherwise Permission error will appear - <5774> Local> Permission denied!\n)

scp /etc/csync2/* root@10.10.10.1:/etc/csync2/
scp /etc/csync2/* root@10.10.10.3:/etc/csync2/
scp /etc/csync2/* root@10.10.10.7:/etc/csync2/


